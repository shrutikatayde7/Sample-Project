{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHPRAMOD\\\\Desktop\\\\K1\\\\admin_portal\\\\frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Spinner, Badge } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport ProgramTable from './ProgramTable';\nimport SchedulesTable from './SchedulesTable';\nimport ProgramModal from './ProgramModal';\nimport EditProgramModal from './EditProgramModal';\nimport DetailsModal from './DetailsModal';\nimport SchedulesModal from './SchedulesModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // --- IDEAL SOFT GREEN THEME ---\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst palette = {\n  primary: '#28a745',\n  // soft green for highlights and actions\n  accent: '#e6fff2',\n  // light green accent for subtle highlights\n  background: '#f5f5f5',\n  // subtle light gray for main background\n  card: '#fff',\n  // clean white for cards and tables\n  text: '#222',\n  // dark gray for text\n  border: '#e0e0e0',\n  // lighter border for separation\n  header: 'linear-gradient(90deg, #28a745 0%, #e6fff2 100%)',\n  // gradient for headers\n  section: '#f0f4f8',\n  // very light blue-gray for section backgrounds\n  success: '#28a745',\n  danger: '#dc2626'\n};\nconst fontFamily = 'Segoe UI, Roboto, Arial, sans-serif';\nconst cardStyle = {\n  borderRadius: 16,\n  border: `1px solid ${palette.border}`,\n  boxShadow: '0 2px 16px 0 rgba(40,167,69,0.08)',\n  background: palette.card,\n  fontFamily,\n  color: palette.text\n};\nconst gradientHeader = {\n  background: palette.header,\n  color: '#fff',\n  borderRadius: '16px 16px 0 0',\n  padding: '24px 24px 12px 24px',\n  borderBottom: `1px solid ${palette.border}`,\n  fontWeight: 700,\n  letterSpacing: 1,\n  fontFamily,\n  fontSize: '1.6rem'\n};\nconst badgeInfo = {\n  background: palette.primary,\n  color: '#fff',\n  fontWeight: 600,\n  fontSize: 13,\n  borderRadius: 8,\n  padding: '2px 10px',\n  border: 'none',\n  fontFamily\n};\nconst badgeSecondary = {\n  background: palette.section,\n  color: palette.primary,\n  fontWeight: 600,\n  fontSize: 13,\n  borderRadius: 8,\n  padding: '2px 10px',\n  border: 'none',\n  fontFamily\n};\nconst actionBtn = {\n  borderRadius: 50,\n  background: palette.primary,\n  border: 'none',\n  color: '#fff',\n  marginRight: 6,\n  transition: 'background 0.2s',\n  fontWeight: 600,\n  fontFamily,\n  boxShadow: '0 2px 8px rgba(40,167,69,0.10)'\n};\nconst tableRow = {\n  background: palette.card,\n  borderBottom: `1px solid ${palette.border}`,\n  fontFamily,\n  color: palette.text\n};\nconst tableRowAlt = {\n  background: palette.section,\n  fontFamily,\n  color: palette.text\n};\n\n// Custom gradient background for header and modals\n// const gradientHeader = {\n//   background: 'linear-gradient(90deg, #0072ff 0%, #00c6ff 100%)',\n//   color: '#fff',\n//   borderRadius: '8px 8px 0 0',\n//   // padding: '24px 24px 12px 24px',\n//   boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\n// };\n\nconst API_BASE = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  // Sidebar tab state\n  const [activeTab, setActiveTab] = useState('programs');\n\n  // Listen for sidebar tab change\n  useEffect(() => {\n    const handler = e => setActiveTab(e.detail);\n    window.addEventListener('sidebarTabChange', handler);\n    return () => window.removeEventListener('sidebarTabChange', handler);\n  }, []);\n  // ---- Table state\n  const [programs, setPrograms] = useState([]);\n  const [tableLoading, setTableLoading] = useState(false);\n  const [tableError, setTableError] = useState('');\n\n  // ---- Modal state\n  const [showModal, setShowModal] = useState(false);\n\n  // ---- Builder state\n  const [current, setCurrent] = useState({\n    id: null,\n    title: ''\n  });\n  const [weeks, setWeeks] = useState([]);\n  const [moduleDrafts, setModuleDrafts] = useState({});\n  const [building, setBuilding] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  // Add a loading state for allProgramWeeks\n  const [allProgramWeeksLoading, setAllProgramWeeksLoading] = useState(true);\n\n  // Add this new state:\n  const [allProgramWeeks, setAllProgramWeeks] = useState([]);\n\n  // Fetch all weeks (with modules) for all programs after loading programs\n  useEffect(() => {\n    const fetchAllWeeksAndModules = async () => {\n      setAllProgramWeeksLoading(true);\n      if (programs.length === 0) {\n        setAllProgramWeeks([]);\n        setAllProgramWeeksLoading(false);\n        return;\n      }\n      let allWeeks = [];\n      for (const program of programs) {\n        const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n        if (res.ok) {\n          const ws = await res.json();\n          // For each week, fetch modules\n          const weeksWithModules = await Promise.all(ws.map(async w => {\n            const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n            const mods = modRes.ok ? await modRes.json() : [];\n            return {\n              ...w,\n              program_id: program.id,\n              modules: mods\n            };\n          }));\n          allWeeks = allWeeks.concat(weeksWithModules);\n        }\n      }\n      setAllProgramWeeks(allWeeks);\n      setAllProgramWeeksLoading(false);\n    };\n    fetchAllWeeksAndModules();\n  }, [programs]);\n\n  // ---- Details modal state (not used for inline details anymore)\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [detailsLoading, setDetailsLoading] = useState(false);\n  const [detailsError, setDetailsError] = useState('');\n  const [detailsProgram, setDetailsProgram] = useState(null);\n\n  // ---- Edit modal state\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  // ---- Local ack for \"Complete Program\" (no API call)\n  const [ackMessage, setAckMessage] = useState('');\n\n  // ---- Schedules state ----\n  const [schedules, setSchedules] = useState([]);\n  const [scheduleLoading, setScheduleLoading] = useState(false);\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [scheduleForm, setScheduleForm] = useState({\n    email: '',\n    program_id: '',\n    start_date: '',\n    end_date: '',\n    is_finished: false\n  });\n  const [scheduleError, setScheduleError] = useState('');\n  const [programOptions, setProgramOptions] = useState([]);\n  const [selectedProgramWeeks, setSelectedProgramWeeks] = useState(0); // For auto end date\n\n  // ---- Multi-schedule modal state ----\n  const [multiSchedules, setMultiSchedules] = useState([]); // Local schedules for modal\n\n  // New state for program schedule details modal (not used for inline details anymore)\n  const [showProgramScheduleModal, setShowProgramScheduleModal] = useState(false);\n  const [selectedProgramForSchedules, setSelectedProgramForSchedules] = useState(null);\n  const [selectedProgramSchedules, setSelectedProgramSchedules] = useState([]);\n\n  // Group schedules by program\n  const groupedSchedules = programs.map(program => {\n    const schedulesForProgram = schedules.filter(s => String(s.program_id) === String(program.id));\n    return {\n      program,\n      schedules: schedulesForProgram\n    };\n  }).filter(g => g.schedules.length > 0);\n\n  // Search state for employee in schedules\n  const [searchEmployee, setSearchEmployee] = useState('');\n\n  // Filtered schedules by search (live filtering)\n  const filteredGroupedSchedules = useMemo(() => {\n    if (!searchEmployee.trim()) return groupedSchedules;\n    const query = searchEmployee.trim().toLowerCase();\n    return groupedSchedules.map(({\n      program,\n      schedules\n    }) => ({\n      program,\n      schedules: schedules.filter(s => s.email.toLowerCase().includes(query))\n    })).filter(g => g.schedules.length > 0);\n  }, [groupedSchedules, searchEmployee]);\n\n  // Search state for employee in schedules\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Search handler\n  const handleSearchEmployee = () => {\n    const query = searchEmployee.trim().toLowerCase();\n    if (!query) {\n      setSearchResults([]);\n      return;\n    }\n    // Find all programs where this employee is enrolled\n    const enrolledPrograms = programs.filter(program => schedules.some(s => String(s.program_id) === String(program.id) && s.email.toLowerCase().includes(query)));\n    setSearchResults(enrolledPrograms);\n  };\n\n  // Delete a schedule from details modal\n  const handleDeleteScheduleFromModal = async id => {\n    if (!window.confirm('Delete this employee schedule?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/schedules/${id}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) throw new Error('Failed to delete schedule');\n      // Remove from modal state immediately\n      setSelectedProgramSchedules(prev => prev.filter(s => s.id !== id));\n      // Also reload all schedules for table\n      await loadSchedules();\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete schedule');\n    }\n  };\n\n  // ===== Table load =====\n  const loadPrograms = async () => {\n    try {\n      setTableLoading(true);\n      setTableError('');\n      const res = await fetch(`${API_BASE}/programs`);\n      if (!res.ok) throw new Error(`Failed to load programs (${res.status})`);\n      const data = await res.json();\n      setPrograms(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setTableError(err.message || 'Failed to load programs');\n    } finally {\n      setTableLoading(false);\n    }\n  };\n\n  // ===== Load schedules =====\n  const loadSchedules = async () => {\n    setScheduleLoading(true);\n    setScheduleError('');\n    try {\n      const res = await fetch(`${API_BASE}/schedules`);\n      if (!res.ok) throw new Error('Failed to load schedules');\n      const data = await res.json();\n      setSchedules(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setScheduleError(err.message || 'Failed to load schedules');\n    } finally {\n      setScheduleLoading(false);\n    }\n  };\n\n  // ===== Load programs for dropdown =====\n  const loadProgramOptions = async () => {\n    try {\n      const res = await fetch(`${API_BASE}/programs`);\n      if (!res.ok) throw new Error('Failed to load programs');\n      const data = await res.json();\n      setProgramOptions(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setProgramOptions([]);\n    }\n  };\n  useEffect(() => {\n    loadPrograms();\n    loadSchedules();\n    loadProgramOptions();\n  }, []);\n  const nextWeekNumber = useMemo(() => {\n    const maxExisting = weeks.reduce((max, w) => Math.max(max, Number(w.week_number) || 0), 0);\n    return maxExisting + 1;\n  }, [weeks]);\n\n  // ===== Actions =====\n  const startBuilding = async () => {\n    setAckMessage('');\n    if (!current.title.trim()) {\n      alert('Please enter a program title.');\n      return false; // Indicate failure\n    }\n    try {\n      setSubmitting(true);\n      const res = await fetch(`${API_BASE}/programs`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: current.title.trim()\n        })\n      });\n      if (!res.ok) throw new Error(`Failed to create program (${res.status})`);\n      const data = await res.json();\n      setCurrent(prev => ({\n        ...prev,\n        id: data.program_id\n      }));\n      setWeeks([]);\n      setBuilding(true);\n      // Do NOT close modal here; let ProgramModal handle step change\n      await loadPrograms();\n      return true; // Indicate success\n    } catch (err) {\n      alert(err.message || 'Failed to create program.');\n      return false;\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const addWeek = async () => {\n    setAckMessage('');\n    if (!current.id) {\n      alert('No program selected/created.');\n      return;\n    }\n    try {\n      setSubmitting(true);\n      const res = await fetch(`${API_BASE}/programs/${current.id}/weeks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          week_number: nextWeekNumber\n        })\n      });\n      if (res.status === 409) {\n        alert(`Week ${nextWeekNumber} already exists.`);\n        return;\n      }\n      if (!res.ok) throw new Error(`Failed to add week (${res.status})`);\n      const data = await res.json();\n      setWeeks(prev => [...prev, {\n        id: data.week_id,\n        hasRealId: true,\n        week_number: nextWeekNumber,\n        modules: []\n      }]);\n      await loadPrograms();\n    } catch (err) {\n      alert(err.message || 'Failed to add week.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const updateModuleDraft = (weekId, field, value) => {\n    setModuleDrafts(prev => ({\n      ...prev,\n      [weekId]: {\n        ...(prev[weekId] || {\n          title: '',\n          file_link: ''\n        }),\n        [field]: value\n      }\n    }));\n  };\n  const addModule = async weekId => {\n    setAckMessage('');\n    const draft = moduleDrafts[weekId] || {\n      title: '',\n      file_link: ''\n    };\n    if (!draft.title.trim() || !draft.file_link.trim()) {\n      alert('Module title and file link are required.');\n      return;\n    }\n    try {\n      setSubmitting(true);\n      const res = await fetch(`${API_BASE}/weeks/${weekId}/modules`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: draft.title.trim(),\n          file_link: draft.file_link.trim()\n        })\n      });\n      if (!res.ok) throw new Error(`Failed to add module (${res.status})`);\n      const data = await res.json();\n      const newMod = {\n        id: data.module_id,\n        title: draft.title.trim(),\n        file_link: draft.file_link.trim(),\n        is_finished: undefined,\n        completed_at: null\n      };\n      setWeeks(prev => prev.map(w => w.id === weekId ? {\n        ...w,\n        modules: [...(w.modules || []), newMod]\n      } : w));\n      setModuleDrafts(prev => ({\n        ...prev,\n        [weekId]: {\n          title: '',\n          file_link: ''\n        }\n      }));\n    } catch (err) {\n      alert(err.message || 'Failed to add module.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const resetForm = () => {\n    setBuilding(false);\n    setCurrent({\n      id: null,\n      title: ''\n    });\n    setWeeks([]);\n    setModuleDrafts({});\n    setShowModal(false);\n    setShowEditModal(false);\n    setAckMessage('');\n  };\n\n  // ===== Details modal (not used for inline details anymore) =====\n  const openDetailsModal = async program => {\n    setShowDetailsModal(true);\n    setDetailsLoading(true);\n    setDetailsError('');\n    setDetailsProgram(program);\n    try {\n      const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n      const ws = res.ok ? await res.json() : [];\n      // Fetch modules for each week\n      const weeksWithModules = await Promise.all(ws.map(async w => {\n        const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n        const mods = modRes.ok ? await modRes.json() : [];\n        return {\n          ...w,\n          hasRealId: true,\n          modules: mods\n        };\n      }));\n      setWeeks(weeksWithModules);\n    } catch (e) {\n      setDetailsError(e.message || 'Failed to load details');\n      setWeeks([]);\n    } finally {\n      setDetailsLoading(false);\n    }\n  };\n\n  // ===== Edit modal =====\n  const openEditModal = async program => {\n    setCurrent({\n      id: program.id,\n      title: program.title\n    });\n    setBuilding(true);\n    setShowEditModal(true);\n    setShowModal(false);\n    try {\n      const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n      const ws = res.ok ? await res.json() : [];\n      const weeksWithModules = await Promise.all(ws.map(async w => {\n        const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n        const mods = modRes.ok ? await modRes.json() : [];\n        return {\n          ...w,\n          hasRealId: true,\n          modules: mods\n        };\n      }));\n      setWeeks(weeksWithModules);\n    } catch (e) {\n      setWeeks([]);\n    }\n  };\n  const handleDeleteProgram = async programId => {\n    if (!window.confirm('Are you sure you want to delete this program?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/programs/${programId}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) throw new Error('Failed to delete program');\n      await loadPrograms();\n      window.alert('Program deleted successfully!');\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete program');\n    }\n  };\n  const handleCopyProgram = async programId => {\n    const newTitle = window.prompt('Enter new program title to copy this program:');\n    if (!newTitle) return;\n    try {\n      const res = await fetch(`${API_BASE}/programs/${programId}/copy`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          program_title: newTitle\n        })\n      });\n      if (!res.ok) throw new Error('Failed to copy program');\n      await loadPrograms();\n      window.alert('Program copied successfully!');\n    } catch (err) {\n      window.alert(err.message || 'Failed to copy program');\n    }\n  };\n\n  // ===== Schedules =====\n  const handleScheduleFormChange = (field, value) => {\n    setScheduleForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // If changing program_id, update selectedProgramWeeks\n    if (field === 'program_id') {\n      const selected = programOptions.find(p => String(p.id) === String(value));\n      setSelectedProgramWeeks((selected === null || selected === void 0 ? void 0 : selected.weeks_count) || 0);\n      // Reset end_date if program changes\n      setScheduleForm(prev => ({\n        ...prev,\n        end_date: ''\n      }));\n    }\n\n    // If changing start_date and program_id is selected, auto-calculate end_date\n    if (field === 'start_date') {\n      if (scheduleForm.program_id) {\n        const selected = programOptions.find(p => String(p.id) === String(scheduleForm.program_id));\n        const weeksCount = (selected === null || selected === void 0 ? void 0 : selected.weeks_count) || selectedProgramWeeks || 0;\n        if (value && weeksCount > 0) {\n          const start = new Date(value);\n          // End date is last day of last week (weeksCount * 7 - 1 days after start)\n          const end = new Date(start);\n          end.setDate(start.getDate() + weeksCount * 7 - 1);\n          const endDateStr = end.toISOString().slice(0, 10);\n          setScheduleForm(prev => ({\n            ...prev,\n            end_date: endDateStr\n          }));\n        }\n      }\n    }\n  };\n  const openScheduleModalForProgram = program => {\n    setShowScheduleModal(true);\n    setScheduleForm({\n      email: '',\n      program_id: program.id,\n      start_date: '',\n      end_date: '',\n      is_finished: false\n    });\n    setSelectedProgramWeeks(program.weeks_count || 0);\n    setMultiSchedules([]); // Reset local schedules for modal\n  };\n\n  // Add schedule locally in modal\n  const addLocalSchedule = () => {\n    setScheduleError('');\n    const {\n      email,\n      program_id,\n      start_date,\n      end_date\n    } = scheduleForm;\n    if (!email.trim() || !program_id || !start_date || !end_date) {\n      setScheduleError('All fields are required.');\n      return;\n    }\n    setMultiSchedules(prev => [...prev, {\n      email: email.trim(),\n      program_id,\n      start_date,\n      end_date,\n      is_finished: false,\n      temp_id: Date.now() + Math.random() // For rendering\n    }]);\n    // Reset only email for next entry, keep program/start/end\n    setScheduleForm(prev => ({\n      ...prev,\n      email: ''\n    }));\n  };\n\n  // Remove local schedule from modal\n  const removeLocalSchedule = temp_id => {\n    setMultiSchedules(prev => prev.filter(s => s.temp_id !== temp_id));\n  };\n\n  // Submit all local schedules to backend\n  const submitAllSchedules = async () => {\n    setScheduleError('');\n    if (multiSchedules.length === 0) {\n      setScheduleError('Add at least one schedule.');\n      return;\n    }\n    try {\n      for (const s of multiSchedules) {\n        await fetch(`${API_BASE}/schedules`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: s.email,\n            program_id: s.program_id,\n            start_date: s.start_date,\n            end_date: s.end_date,\n            is_finished: false\n          })\n        });\n      }\n      setShowScheduleModal(false);\n      setScheduleForm({\n        email: '',\n        program_id: '',\n        start_date: '',\n        end_date: '',\n        is_finished: false\n      });\n      setMultiSchedules([]);\n      await loadSchedules();\n    } catch (err) {\n      setScheduleError('Failed to create schedules');\n    }\n  };\n  const handleDeleteSchedule = async id => {\n    if (!window.confirm('Delete this schedule?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/schedules/${id}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) throw new Error('Failed to delete schedule');\n      await loadSchedules();\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete schedule');\n    }\n  };\n\n  // ===== Modal scroll lock =====\n  useEffect(() => {\n    const isAnyModalOpen = showDetailsModal || showEditModal || showModal || showScheduleModal;\n    if (isAnyModalOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, [showDetailsModal, showEditModal, showModal, showScheduleModal]);\n\n  // --- Inline details state for programs and schedules ---\n  const [openProgramDetailsId, setOpenProgramDetailsId] = useState(null);\n  const [openScheduleDetailsId, setOpenScheduleDetailsId] = useState(null);\n  const [inlineDetailsLoading, setInlineDetailsLoading] = useState(false);\n  const [inlineDetailsWeeks, setInlineDetailsWeeks] = useState([]);\n  const [inlineDetailsError, setInlineDetailsError] = useState('');\n\n  // For schedule details (list of schedules for a program)\n  const [inlineScheduleList, setInlineScheduleList] = useState([]);\n  const [inlineScheduleLoading, setInlineScheduleLoading] = useState(false);\n\n  // Handle click on program title in training track\n  const handleProgramTitleClick = async program => {\n    if (openProgramDetailsId === program.id) {\n      // Close details if already open\n      setOpenProgramDetailsId(null);\n      setInlineDetailsWeeks([]);\n      setInlineDetailsError('');\n      setInlineDetailsLoading(false);\n      return;\n    }\n    setOpenProgramDetailsId(program.id);\n    setInlineDetailsLoading(true);\n    setInlineDetailsError('');\n    setInlineDetailsWeeks([]);\n    try {\n      const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n      const ws = res.ok ? await res.json() : [];\n      // Fetch modules for each week\n      const weeksWithModules = await Promise.all(ws.map(async w => {\n        const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n        const mods = modRes.ok ? await modRes.json() : [];\n        return {\n          ...w,\n          hasRealId: true,\n          modules: mods\n        };\n      }));\n      setInlineDetailsWeeks(weeksWithModules);\n    } catch (e) {\n      setInlineDetailsError(e.message || 'Failed to load details');\n      setInlineDetailsWeeks([]);\n    } finally {\n      setInlineDetailsLoading(false);\n    }\n    // Close schedule details if open\n    setOpenScheduleDetailsId(null);\n  };\n\n  // Handle click on program title in schedules table\n  const handleScheduleTitleClick = async program => {\n    if (openScheduleDetailsId === program.id) {\n      setOpenScheduleDetailsId(null);\n      setInlineScheduleList([]);\n      setInlineScheduleLoading(false);\n      return;\n    }\n    setOpenScheduleDetailsId(program.id);\n    setInlineScheduleLoading(true);\n    setInlineScheduleList([]);\n    // Get all schedules for this program\n    const schedulesForProgram = schedules.filter(s => String(s.program_id) === String(program.id));\n    // Simulate loading\n    setTimeout(() => {\n      setInlineScheduleList(schedulesForProgram);\n      setInlineScheduleLoading(false);\n    }, 200); // Simulate async\n    // Close program details if open\n    setOpenProgramDetailsId(null);\n  };\n\n  // Delete schedule from inline schedule details\n  const handleDeleteScheduleInline = async (id, programId) => {\n    if (!window.confirm('Delete this employee schedule?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/schedules/${id}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) throw new Error('Failed to delete schedule');\n      // Remove from inline state immediately\n      setInlineScheduleList(prev => prev.filter(s => s.id !== id));\n      await loadSchedules();\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete schedule');\n    }\n  };\n\n  // Helper: Calculate progress percentage for a schedule\n  function getScheduleProgress(schedule, programId) {\n    // Find all weeks for this program\n    const programWeeks = allProgramWeeks.filter(w => String(w.program_id) === String(programId));\n    const allModules = programWeeks.flatMap(w => Array.isArray(w.modules) ? w.modules : []);\n    const totalModules = allModules.length;\n    if (totalModules === 0) return 0;\n    // If schedule has completed_modules (array of module ids), use it\n    let completed = 0;\n    if (Array.isArray(schedule.completed_modules)) {\n      completed = schedule.completed_modules.length;\n    } else if (typeof schedule.completed_modules === 'string') {\n      // If backend sends as comma-separated string\n      completed = schedule.completed_modules.split(',').filter(Boolean).length;\n    } else if (typeof schedule.progress === 'number') {\n      // If backend sends progress as number (0-100)\n      return schedule.progress;\n    } else if (typeof schedule.is_finished === 'boolean' && schedule.is_finished) {\n      return 100;\n    }\n    // If backend marks modules as finished per module, you may need to adjust here\n    return Math.round(completed / totalModules * 100);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      minHeight: '100vh',\n      background: palette.background,\n      fontFamily\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          flex: 1,\n          padding: '32px',\n          background: palette.card\n        },\n        children: [activeTab === 'programs' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ProgramTable, {\n            programs: programs,\n            tableLoading: tableLoading,\n            tableError: tableError,\n            openProgramDetailsId: openProgramDetailsId,\n            handleProgramTitleClick: handleProgramTitleClick,\n            openEditModal: openEditModal,\n            openScheduleModalForProgram: openScheduleModalForProgram,\n            handleCopyProgram: handleCopyProgram,\n            handleDeleteProgram: handleDeleteProgram,\n            inlineDetailsLoading: inlineDetailsLoading,\n            inlineDetailsError: inlineDetailsError,\n            inlineDetailsWeeks: inlineDetailsWeeks,\n            badgeInfo: badgeInfo,\n            badgeSecondary: badgeSecondary,\n            actionBtn: actionBtn,\n            palette: palette,\n            cardStyle: cardStyle,\n            setShowModal: setShowModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProgramModal, {\n            show: showModal,\n            onHide: resetForm,\n            current: current,\n            setCurrent: setCurrent,\n            submitting: submitting,\n            startBuilding: startBuilding,\n            resetForm: resetForm,\n            palette: palette,\n            gradientHeader: gradientHeader,\n            weeks: weeks,\n            moduleDrafts: moduleDrafts,\n            updateModuleDraft: updateModuleDraft,\n            addModule: addModule,\n            addWeek: addWeek,\n            nextWeekNumber: nextWeekNumber,\n            ackMessage: ackMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DetailsModal, {\n            show: showDetailsModal,\n            onHide: () => setShowDetailsModal(false),\n            detailsProgram: detailsProgram,\n            detailsLoading: detailsLoading,\n            detailsError: detailsError,\n            weeks: weeks,\n            palette: palette,\n            cardStyle: cardStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditProgramModal, {\n            show: showEditModal && current.id,\n            current: current,\n            weeks: weeks,\n            moduleDrafts: moduleDrafts,\n            updateModuleDraft: updateModuleDraft,\n            addModule: addModule,\n            addWeek: addWeek,\n            submitting: submitting,\n            nextWeekNumber: nextWeekNumber,\n            resetForm: resetForm,\n            ackMessage: ackMessage,\n            palette: palette,\n            fontFamily: fontFamily\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SchedulesModal, {\n            show: showScheduleModal,\n            onHide: () => setShowScheduleModal(false),\n            scheduleForm: scheduleForm,\n            handleScheduleFormChange: handleScheduleFormChange,\n            programOptions: programOptions,\n            selectedProgramWeeks: selectedProgramWeeks,\n            addLocalSchedule: addLocalSchedule,\n            submitAllSchedules: submitAllSchedules,\n            multiSchedules: multiSchedules,\n            removeLocalSchedule: removeLocalSchedule,\n            scheduleError: scheduleError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), activeTab === 'schedules' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(SchedulesTable, {\n            filteredGroupedSchedules: filteredGroupedSchedules,\n            allProgramWeeks: allProgramWeeks,\n            searchEmployee: searchEmployee,\n            setSearchEmployee: setSearchEmployee,\n            scheduleLoading: scheduleLoading,\n            allProgramWeeksLoading: allProgramWeeksLoading,\n            scheduleError: scheduleError,\n            openScheduleDetailsId: openScheduleDetailsId,\n            handleScheduleTitleClick: handleScheduleTitleClick,\n            inlineScheduleList: inlineScheduleList,\n            inlineScheduleLoading: inlineScheduleLoading,\n            getScheduleProgress: getScheduleProgress,\n            handleDeleteScheduleInline: handleDeleteScheduleInline,\n            showProgramScheduleModal: showProgramScheduleModal,\n            setShowProgramScheduleModal: setShowProgramScheduleModal,\n            selectedProgramForSchedules: selectedProgramForSchedules,\n            selectedProgramSchedules: selectedProgramSchedules,\n            handleDeleteScheduleFromModal: handleDeleteScheduleFromModal,\n            gradientHeader: gradientHeader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 717,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8NEoPnmbwzMyksx8fed0cUBKwkA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Button","Spinner","Badge","Sidebar","Header","ProgramTable","SchedulesTable","ProgramModal","EditProgramModal","DetailsModal","SchedulesModal","jsxDEV","_jsxDEV","Fragment","_Fragment","palette","primary","accent","background","card","text","border","header","section","success","danger","fontFamily","cardStyle","borderRadius","boxShadow","color","gradientHeader","padding","borderBottom","fontWeight","letterSpacing","fontSize","badgeInfo","badgeSecondary","actionBtn","marginRight","transition","tableRow","tableRowAlt","API_BASE","App","_s","activeTab","setActiveTab","handler","e","detail","window","addEventListener","removeEventListener","programs","setPrograms","tableLoading","setTableLoading","tableError","setTableError","showModal","setShowModal","current","setCurrent","id","title","weeks","setWeeks","moduleDrafts","setModuleDrafts","building","setBuilding","submitting","setSubmitting","allProgramWeeksLoading","setAllProgramWeeksLoading","allProgramWeeks","setAllProgramWeeks","fetchAllWeeksAndModules","length","allWeeks","program","res","fetch","ok","ws","json","weeksWithModules","Promise","all","map","w","modRes","mods","program_id","modules","concat","showDetailsModal","setShowDetailsModal","detailsLoading","setDetailsLoading","detailsError","setDetailsError","detailsProgram","setDetailsProgram","showEditModal","setShowEditModal","ackMessage","setAckMessage","schedules","setSchedules","scheduleLoading","setScheduleLoading","showScheduleModal","setShowScheduleModal","scheduleForm","setScheduleForm","email","start_date","end_date","is_finished","scheduleError","setScheduleError","programOptions","setProgramOptions","selectedProgramWeeks","setSelectedProgramWeeks","multiSchedules","setMultiSchedules","showProgramScheduleModal","setShowProgramScheduleModal","selectedProgramForSchedules","setSelectedProgramForSchedules","selectedProgramSchedules","setSelectedProgramSchedules","groupedSchedules","schedulesForProgram","filter","s","String","g","searchEmployee","setSearchEmployee","filteredGroupedSchedules","trim","query","toLowerCase","includes","searchResults","setSearchResults","handleSearchEmployee","enrolledPrograms","some","handleDeleteScheduleFromModal","confirm","method","Error","prev","loadSchedules","err","alert","message","loadPrograms","status","data","Array","isArray","loadProgramOptions","nextWeekNumber","maxExisting","reduce","max","Math","Number","week_number","startBuilding","headers","body","JSON","stringify","addWeek","week_id","hasRealId","updateModuleDraft","weekId","field","value","file_link","addModule","draft","newMod","module_id","undefined","completed_at","resetForm","openDetailsModal","openEditModal","handleDeleteProgram","programId","handleCopyProgram","newTitle","prompt","program_title","handleScheduleFormChange","selected","find","p","weeks_count","weeksCount","start","Date","end","setDate","getDate","endDateStr","toISOString","slice","openScheduleModalForProgram","addLocalSchedule","temp_id","now","random","removeLocalSchedule","submitAllSchedules","handleDeleteSchedule","isAnyModalOpen","document","style","overflow","openProgramDetailsId","setOpenProgramDetailsId","openScheduleDetailsId","setOpenScheduleDetailsId","inlineDetailsLoading","setInlineDetailsLoading","inlineDetailsWeeks","setInlineDetailsWeeks","inlineDetailsError","setInlineDetailsError","inlineScheduleList","setInlineScheduleList","inlineScheduleLoading","setInlineScheduleLoading","handleProgramTitleClick","handleScheduleTitleClick","setTimeout","handleDeleteScheduleInline","getScheduleProgress","schedule","programWeeks","allModules","flatMap","totalModules","completed","completed_modules","split","Boolean","progress","round","display","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","flex","flexDirection","show","onHide","_c","$RefreshReg$"],"sources":["C:/Users/SHPRAMOD/Desktop/K1/admin_portal/frontend/src/components/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Spinner, Badge } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport ProgramTable from './ProgramTable';\nimport SchedulesTable from './SchedulesTable';\nimport ProgramModal from './ProgramModal';\nimport EditProgramModal from './EditProgramModal';\nimport DetailsModal from './DetailsModal';\nimport SchedulesModal from './SchedulesModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';// --- IDEAL SOFT GREEN THEME ---\nconst palette = {\n  primary: '#28a745', // soft green for highlights and actions\n  accent: '#e6fff2', // light green accent for subtle highlights\n  background: '#f5f5f5', // subtle light gray for main background\n  card: '#fff', // clean white for cards and tables\n  text: '#222', // dark gray for text\n  border: '#e0e0e0', // lighter border for separation\n  header: 'linear-gradient(90deg, #28a745 0%, #e6fff2 100%)', // gradient for headers\n  section: '#f0f4f8', // very light blue-gray for section backgrounds\n  success: '#28a745',\n  danger: '#dc2626',\n};\n\nconst fontFamily = 'Segoe UI, Roboto, Arial, sans-serif';\n\nconst cardStyle = {\n  borderRadius: 16,\n  border: `1px solid ${palette.border}`,\n  boxShadow: '0 2px 16px 0 rgba(40,167,69,0.08)',\n  background: palette.card,\n  fontFamily,\n  color: palette.text,\n};\nconst gradientHeader = {\n  background: palette.header,\n  color: '#fff',\n  borderRadius: '16px 16px 0 0',\n  padding: '24px 24px 12px 24px',\n  borderBottom: `1px solid ${palette.border}`,\n  fontWeight: 700,\n  letterSpacing: 1,\n  fontFamily,\n  fontSize: '1.6rem',\n};\nconst badgeInfo = {\n  background: palette.primary,\n  color: '#fff',\n  fontWeight: 600,\n  fontSize: 13,\n  borderRadius: 8,\n  padding: '2px 10px',\n  border: 'none',\n  fontFamily,\n};\nconst badgeSecondary = {\n  background: palette.section,\n  color: palette.primary,\n  fontWeight: 600,\n  fontSize: 13,\n  borderRadius: 8,\n  padding: '2px 10px',\n  border: 'none',\n  fontFamily,\n};\nconst actionBtn = {\n  borderRadius: 50,\n  background: palette.primary,\n  border: 'none',\n  color: '#fff',\n  marginRight: 6,\n  transition: 'background 0.2s',\n  fontWeight: 600,\n  fontFamily,\n  boxShadow: '0 2px 8px rgba(40,167,69,0.10)',\n};\nconst tableRow = {\n  background: palette.card,\n  borderBottom: `1px solid ${palette.border}`,\n  fontFamily,\n  color: palette.text,\n};\nconst tableRowAlt = {\n  background: palette.section,\n  fontFamily,\n  color: palette.text,\n};\n\n// Custom gradient background for header and modals\n// const gradientHeader = {\n//   background: 'linear-gradient(90deg, #0072ff 0%, #00c6ff 100%)',\n//   color: '#fff',\n//   borderRadius: '8px 8px 0 0',\n//   // padding: '24px 24px 12px 24px',\n//   boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\n// };\n\nconst API_BASE = 'http://localhost:5000/api';\n \nfunction App() {\n  // Sidebar tab state\n  const [activeTab, setActiveTab] = useState('programs');\n\n  // Listen for sidebar tab change\n  useEffect(() => {\n    const handler = (e) => setActiveTab(e.detail);\n    window.addEventListener('sidebarTabChange', handler);\n    return () => window.removeEventListener('sidebarTabChange', handler);\n  }, []);\n  // ---- Table state\n  const [programs, setPrograms] = useState([]);\n  const [tableLoading, setTableLoading] = useState(false);\n  const [tableError, setTableError] = useState('');\n\n  // ---- Modal state\n  const [showModal, setShowModal] = useState(false);\n\n  // ---- Builder state\n  const [current, setCurrent] = useState({ id: null, title: '' });\n  const [weeks, setWeeks] = useState([]);\n  const [moduleDrafts, setModuleDrafts] = useState({});\n  const [building, setBuilding] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  // Add a loading state for allProgramWeeks\n  const [allProgramWeeksLoading, setAllProgramWeeksLoading] = useState(true);\n\n  // Add this new state:\n  const [allProgramWeeks, setAllProgramWeeks] = useState([]);\n\n  // Fetch all weeks (with modules) for all programs after loading programs\n  useEffect(() => {\n    const fetchAllWeeksAndModules = async () => {\n      setAllProgramWeeksLoading(true);\n      if (programs.length === 0) {\n        setAllProgramWeeks([]);\n        setAllProgramWeeksLoading(false);\n        return;\n      }\n      let allWeeks = [];\n      for (const program of programs) {\n        const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n        if (res.ok) {\n          const ws = await res.json();\n          // For each week, fetch modules\n          const weeksWithModules = await Promise.all(ws.map(async w => {\n            const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n            const mods = modRes.ok ? await modRes.json() : [];\n            return { ...w, program_id: program.id, modules: mods };\n          }));\n          allWeeks = allWeeks.concat(weeksWithModules);\n        }\n      }\n      setAllProgramWeeks(allWeeks);\n      setAllProgramWeeksLoading(false);\n    };\n    fetchAllWeeksAndModules();\n  }, [programs]);\n\n  // ---- Details modal state (not used for inline details anymore)\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [detailsLoading, setDetailsLoading] = useState(false);\n  const [detailsError, setDetailsError] = useState('');\n  const [detailsProgram, setDetailsProgram] = useState(null);\n\n  // ---- Edit modal state\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  // ---- Local ack for \"Complete Program\" (no API call)\n  const [ackMessage, setAckMessage] = useState('');\n\n  // ---- Schedules state ----\n  const [schedules, setSchedules] = useState([]);\n  const [scheduleLoading, setScheduleLoading] = useState(false);\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [scheduleForm, setScheduleForm] = useState({ email: '', program_id: '', start_date: '', end_date: '', is_finished: false });\n  const [scheduleError, setScheduleError] = useState('');\n  const [programOptions, setProgramOptions] = useState([]);\n  const [selectedProgramWeeks, setSelectedProgramWeeks] = useState(0); // For auto end date\n\n  // ---- Multi-schedule modal state ----\n  const [multiSchedules, setMultiSchedules] = useState([]); // Local schedules for modal\n\n  // New state for program schedule details modal (not used for inline details anymore)\n  const [showProgramScheduleModal, setShowProgramScheduleModal] = useState(false);\n  const [selectedProgramForSchedules, setSelectedProgramForSchedules] = useState(null);\n  const [selectedProgramSchedules, setSelectedProgramSchedules] = useState([]);\n\n  // Group schedules by program\n  const groupedSchedules = programs.map(program => {\n    const schedulesForProgram = schedules.filter(s => String(s.program_id) === String(program.id));\n    return {\n      program,\n      schedules: schedulesForProgram\n    };\n  }).filter(g => g.schedules.length > 0);\n\n  // Search state for employee in schedules\n  const [searchEmployee, setSearchEmployee] = useState('');\n\n  // Filtered schedules by search (live filtering)\n  const filteredGroupedSchedules = useMemo(() => {\n    if (!searchEmployee.trim()) return groupedSchedules;\n    const query = searchEmployee.trim().toLowerCase();\n    return groupedSchedules\n      .map(({ program, schedules }) => ({\n        program,\n        schedules: schedules.filter(s => s.email.toLowerCase().includes(query))\n      }))\n      .filter(g => g.schedules.length > 0);\n  }, [groupedSchedules, searchEmployee]);\n\n  // Search state for employee in schedules\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Search handler\n  const handleSearchEmployee = () => {\n    const query = searchEmployee.trim().toLowerCase();\n    if (!query) {\n      setSearchResults([]);\n      return;\n    }\n    // Find all programs where this employee is enrolled\n    const enrolledPrograms = programs.filter(program =>\n      schedules.some(s =>\n        String(s.program_id) === String(program.id) &&\n        s.email.toLowerCase().includes(query)\n      )\n    );\n    setSearchResults(enrolledPrograms);\n  };\n\n  // Delete a schedule from details modal\n  const handleDeleteScheduleFromModal = async (id) => {\n    if (!window.confirm('Delete this employee schedule?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/schedules/${id}`, { method: 'DELETE' });\n      if (!res.ok) throw new Error('Failed to delete schedule');\n      // Remove from modal state immediately\n      setSelectedProgramSchedules(prev => prev.filter(s => s.id !== id));\n      // Also reload all schedules for table\n      await loadSchedules();\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete schedule');\n    }\n  };\n\n  // ===== Table load =====\n  const loadPrograms = async () => {\n    try {\n      setTableLoading(true);\n      setTableError('');\n      const res = await fetch(`${API_BASE}/programs`);\n      if (!res.ok) throw new Error(`Failed to load programs (${res.status})`);\n      const data = await res.json();\n      setPrograms(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setTableError(err.message || 'Failed to load programs');\n    } finally {\n      setTableLoading(false);\n    }\n  };\n\n  // ===== Load schedules =====\n  const loadSchedules = async () => {\n    setScheduleLoading(true);\n    setScheduleError('');\n    try {\n      const res = await fetch(`${API_BASE}/schedules`);\n      if (!res.ok) throw new Error('Failed to load schedules');\n      const data = await res.json();\n      setSchedules(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setScheduleError(err.message || 'Failed to load schedules');\n    } finally {\n      setScheduleLoading(false);\n    }\n  };\n\n  // ===== Load programs for dropdown =====\n  const loadProgramOptions = async () => {\n    try {\n      const res = await fetch(`${API_BASE}/programs`);\n      if (!res.ok) throw new Error('Failed to load programs');\n      const data = await res.json();\n      setProgramOptions(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setProgramOptions([]);\n    }\n  };\n\n  useEffect(() => {\n    loadPrograms();\n    loadSchedules();\n    loadProgramOptions();\n  }, []);\n\n  const nextWeekNumber = useMemo(() => {\n    const maxExisting = weeks.reduce((max, w) => Math.max(max, Number(w.week_number) || 0), 0);\n    return maxExisting + 1;\n  }, [weeks]);\n\n  // ===== Actions =====\n  const startBuilding = async () => {\n    setAckMessage('');\n    if (!current.title.trim()) {\n      alert('Please enter a program title.');\n      return false; // Indicate failure\n    }\n    try {\n      setSubmitting(true);\n      const res = await fetch(`${API_BASE}/programs`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: current.title.trim() })\n      });\n      if (!res.ok) throw new Error(`Failed to create program (${res.status})`);\n      const data = await res.json();\n      setCurrent(prev => ({ ...prev, id: data.program_id }));\n      setWeeks([]);\n      setBuilding(true);\n      // Do NOT close modal here; let ProgramModal handle step change\n      await loadPrograms();\n      return true; // Indicate success\n    } catch (err) {\n      alert(err.message || 'Failed to create program.');\n      return false;\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const addWeek = async () => {\n    setAckMessage('');\n    if (!current.id) {\n      alert('No program selected/created.');\n      return;\n    }\n    try {\n      setSubmitting(true);\n      const res = await fetch(`${API_BASE}/programs/${current.id}/weeks`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ week_number: nextWeekNumber }),\n      });\n      if (res.status === 409) {\n        alert(`Week ${nextWeekNumber} already exists.`);\n        return;\n      }\n      if (!res.ok) throw new Error(`Failed to add week (${res.status})`);\n      const data = await res.json();\n      setWeeks(prev => [...prev, { id: data.week_id, hasRealId: true, week_number: nextWeekNumber, modules: [] }]);\n      await loadPrograms();\n    } catch (err) {\n      alert(err.message || 'Failed to add week.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const updateModuleDraft = (weekId, field, value) => {\n    setModuleDrafts(prev => ({\n      ...prev,\n      [weekId]: { ...(prev[weekId] || { title: '', file_link: '' }), [field]: value }\n    }));\n  };\n\n  const addModule = async (weekId) => {\n    setAckMessage('');\n    const draft = moduleDrafts[weekId] || { title: '', file_link: '' };\n    if (!draft.title.trim() || !draft.file_link.trim()) {\n      alert('Module title and file link are required.');\n      return;\n    }\n    try {\n      setSubmitting(true);\n      const res = await fetch(`${API_BASE}/weeks/${weekId}/modules`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: draft.title.trim(), file_link: draft.file_link.trim() }),\n      });\n      if (!res.ok) throw new Error(`Failed to add module (${res.status})`);\n      const data = await res.json();\n      const newMod = {\n        id: data.module_id,\n        title: draft.title.trim(),\n        file_link: draft.file_link.trim(),\n        is_finished: undefined,\n        completed_at: null\n      };\n      setWeeks(prev => prev.map(w => (w.id === weekId ? { ...w, modules: [...(w.modules || []), newMod] } : w)));\n      setModuleDrafts(prev => ({ ...prev, [weekId]: { title: '', file_link: '' } }));\n    } catch (err) {\n      alert(err.message || 'Failed to add module.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const resetForm = () => {\n    setBuilding(false);\n    setCurrent({ id: null, title: '' });\n    setWeeks([]);\n    setModuleDrafts({});\n    setShowModal(false);\n    setShowEditModal(false);\n    setAckMessage('');\n  };\n\n  // ===== Details modal (not used for inline details anymore) =====\n  const openDetailsModal = async (program) => {\n    setShowDetailsModal(true);\n    setDetailsLoading(true);\n    setDetailsError('');\n    setDetailsProgram(program);\n    try {\n      const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n      const ws = res.ok ? await res.json() : [];\n      // Fetch modules for each week\n      const weeksWithModules = await Promise.all(ws.map(async w => {\n        const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n        const mods = modRes.ok ? await modRes.json() : [];\n        return { ...w, hasRealId: true, modules: mods };\n      }));\n      setWeeks(weeksWithModules);\n    } catch (e) {\n      setDetailsError(e.message || 'Failed to load details');\n      setWeeks([]);\n    } finally {\n      setDetailsLoading(false);\n    }\n  };\n\n  // ===== Edit modal =====\n  const openEditModal = async (program) => {\n    setCurrent({ id: program.id, title: program.title });\n    setBuilding(true);\n    setShowEditModal(true);\n    setShowModal(false);\n    try {\n      const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n      const ws = res.ok ? await res.json() : [];\n      const weeksWithModules = await Promise.all(ws.map(async w => {\n        const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n        const mods = modRes.ok ? await modRes.json() : [];\n        return { ...w, hasRealId: true, modules: mods };\n      }));\n      setWeeks(weeksWithModules);\n    } catch (e) {\n      setWeeks([]);\n    }\n  };\n\n  const handleDeleteProgram = async (programId) => {\n    if (!window.confirm('Are you sure you want to delete this program?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/programs/${programId}`, { method: 'DELETE' });\n      if (!res.ok) throw new Error('Failed to delete program');\n      await loadPrograms();\n      window.alert('Program deleted successfully!');\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete program');\n    }\n  };\n\n  const handleCopyProgram = async (programId) => {\n    const newTitle = window.prompt('Enter new program title to copy this program:');\n    if (!newTitle) return;\n    try {\n      const res = await fetch(`${API_BASE}/programs/${programId}/copy`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ program_title: newTitle })\n      });\n      if (!res.ok) throw new Error('Failed to copy program');\n      await loadPrograms();\n      window.alert('Program copied successfully!');\n    } catch (err) {\n      window.alert(err.message || 'Failed to copy program');\n    }\n  };\n\n  // ===== Schedules =====\n  const handleScheduleFormChange = (field, value) => {\n    setScheduleForm(prev => ({ ...prev, [field]: value }));\n\n    // If changing program_id, update selectedProgramWeeks\n    if (field === 'program_id') {\n      const selected = programOptions.find(p => String(p.id) === String(value));\n      setSelectedProgramWeeks(selected?.weeks_count || 0);\n      // Reset end_date if program changes\n      setScheduleForm(prev => ({ ...prev, end_date: '' }));\n    }\n\n    // If changing start_date and program_id is selected, auto-calculate end_date\n    if (field === 'start_date') {\n      if (scheduleForm.program_id) {\n        const selected = programOptions.find(p => String(p.id) === String(scheduleForm.program_id));\n        const weeksCount = selected?.weeks_count || selectedProgramWeeks || 0;\n        if (value && weeksCount > 0) {\n          const start = new Date(value);\n          // End date is last day of last week (weeksCount * 7 - 1 days after start)\n          const end = new Date(start);\n          end.setDate(start.getDate() + weeksCount * 7 - 1);\n          const endDateStr = end.toISOString().slice(0, 10);\n          setScheduleForm(prev => ({ ...prev, end_date: endDateStr }));\n        }\n      }\n    }\n  };\n\n  const openScheduleModalForProgram = (program) => {\n    setShowScheduleModal(true);\n    setScheduleForm({\n      email: '',\n      program_id: program.id,\n      start_date: '',\n      end_date: '',\n      is_finished: false\n    });\n    setSelectedProgramWeeks(program.weeks_count || 0);\n    setMultiSchedules([]); // Reset local schedules for modal\n  };\n\n  // Add schedule locally in modal\n  const addLocalSchedule = () => {\n    setScheduleError('');\n    const { email, program_id, start_date, end_date } = scheduleForm;\n    if (!email.trim() || !program_id || !start_date || !end_date) {\n      setScheduleError('All fields are required.');\n      return;\n    }\n    setMultiSchedules(prev => [\n      ...prev,\n      {\n        email: email.trim(),\n        program_id,\n        start_date,\n        end_date,\n        is_finished: false,\n        temp_id: Date.now() + Math.random() // For rendering\n      }\n    ]);\n    // Reset only email for next entry, keep program/start/end\n    setScheduleForm(prev => ({\n      ...prev,\n      email: ''\n    }));\n  };\n\n  // Remove local schedule from modal\n  const removeLocalSchedule = (temp_id) => {\n    setMultiSchedules(prev => prev.filter(s => s.temp_id !== temp_id));\n  };\n\n  // Submit all local schedules to backend\n  const submitAllSchedules = async () => {\n    setScheduleError('');\n    if (multiSchedules.length === 0) {\n      setScheduleError('Add at least one schedule.');\n      return;\n    }\n    try {\n      for (const s of multiSchedules) {\n        await fetch(`${API_BASE}/schedules`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            email: s.email,\n            program_id: s.program_id,\n            start_date: s.start_date,\n            end_date: s.end_date,\n            is_finished: false\n          })\n        });\n      }\n      setShowScheduleModal(false);\n      setScheduleForm({ email: '', program_id: '', start_date: '', end_date: '', is_finished: false });\n      setMultiSchedules([]);\n      await loadSchedules();\n    } catch (err) {\n      setScheduleError('Failed to create schedules');\n    }\n  };\n\n  const handleDeleteSchedule = async (id) => {\n    if (!window.confirm('Delete this schedule?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/schedules/${id}`, { method: 'DELETE' });\n      if (!res.ok) throw new Error('Failed to delete schedule');\n      await loadSchedules();\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete schedule');\n    }\n  };\n\n  // ===== Modal scroll lock =====\n  useEffect(() => {\n    const isAnyModalOpen = showDetailsModal || showEditModal || showModal || showScheduleModal;\n    if (isAnyModalOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, [showDetailsModal, showEditModal, showModal, showScheduleModal]);\n\n  // --- Inline details state for programs and schedules ---\n  const [openProgramDetailsId, setOpenProgramDetailsId] = useState(null);\n  const [openScheduleDetailsId, setOpenScheduleDetailsId] = useState(null);\n  const [inlineDetailsLoading, setInlineDetailsLoading] = useState(false);\n  const [inlineDetailsWeeks, setInlineDetailsWeeks] = useState([]);\n  const [inlineDetailsError, setInlineDetailsError] = useState('');\n\n  // For schedule details (list of schedules for a program)\n  const [inlineScheduleList, setInlineScheduleList] = useState([]);\n  const [inlineScheduleLoading, setInlineScheduleLoading] = useState(false);\n\n  // Handle click on program title in training track\n  const handleProgramTitleClick = async (program) => {\n    if (openProgramDetailsId === program.id) {\n      // Close details if already open\n      setOpenProgramDetailsId(null);\n      setInlineDetailsWeeks([]);\n      setInlineDetailsError('');\n      setInlineDetailsLoading(false);\n      return;\n    }\n    setOpenProgramDetailsId(program.id);\n    setInlineDetailsLoading(true);\n    setInlineDetailsError('');\n    setInlineDetailsWeeks([]);\n    try {\n      const res = await fetch(`${API_BASE}/programs/${program.id}/weeks`);\n      const ws = res.ok ? await res.json() : [];\n      // Fetch modules for each week\n      const weeksWithModules = await Promise.all(ws.map(async w => {\n        const modRes = await fetch(`${API_BASE}/weeks/${w.id}/modules`);\n        const mods = modRes.ok ? await modRes.json() : [];\n        return { ...w, hasRealId: true, modules: mods };\n      }));\n      setInlineDetailsWeeks(weeksWithModules);\n    } catch (e) {\n      setInlineDetailsError(e.message || 'Failed to load details');\n      setInlineDetailsWeeks([]);\n    } finally {\n      setInlineDetailsLoading(false);\n    }\n    // Close schedule details if open\n    setOpenScheduleDetailsId(null);\n  };\n\n  // Handle click on program title in schedules table\n  const handleScheduleTitleClick = async (program) => {\n    if (openScheduleDetailsId === program.id) {\n      setOpenScheduleDetailsId(null);\n      setInlineScheduleList([]);\n      setInlineScheduleLoading(false);\n      return;\n    }\n    setOpenScheduleDetailsId(program.id);\n    setInlineScheduleLoading(true);\n    setInlineScheduleList([]);\n    // Get all schedules for this program\n    const schedulesForProgram = schedules.filter(s => String(s.program_id) === String(program.id));\n    // Simulate loading\n    setTimeout(() => {\n      setInlineScheduleList(schedulesForProgram);\n      setInlineScheduleLoading(false);\n    }, 200); // Simulate async\n    // Close program details if open\n    setOpenProgramDetailsId(null);\n  };\n\n  // Delete schedule from inline schedule details\n  const handleDeleteScheduleInline = async (id, programId) => {\n    if (!window.confirm('Delete this employee schedule?')) return;\n    try {\n      const res = await fetch(`${API_BASE}/schedules/${id}`, { method: 'DELETE' });\n      if (!res.ok) throw new Error('Failed to delete schedule');\n      // Remove from inline state immediately\n      setInlineScheduleList(prev => prev.filter(s => s.id !== id));\n      await loadSchedules();\n    } catch (err) {\n      window.alert(err.message || 'Failed to delete schedule');\n    }\n  };\n\n  // Helper: Calculate progress percentage for a schedule\n  function getScheduleProgress(schedule, programId) {\n    // Find all weeks for this program\n    const programWeeks = allProgramWeeks.filter(w => String(w.program_id) === String(programId));\n    const allModules = programWeeks.flatMap(w => Array.isArray(w.modules) ? w.modules : []);\n    const totalModules = allModules.length;\n    if (totalModules === 0) return 0;\n    // If schedule has completed_modules (array of module ids), use it\n    let completed = 0;\n    if (Array.isArray(schedule.completed_modules)) {\n      completed = schedule.completed_modules.length;\n    } else if (typeof schedule.completed_modules === 'string') {\n      // If backend sends as comma-separated string\n      completed = schedule.completed_modules.split(',').filter(Boolean).length;\n    } else if (typeof schedule.progress === 'number') {\n      // If backend sends progress as number (0-100)\n      return schedule.progress;\n    } else if (typeof schedule.is_finished === 'boolean' && schedule.is_finished) {\n      return 100;\n    }\n    // If backend marks modules as finished per module, you may need to adjust here\n    return Math.round((completed / totalModules) * 100);\n  }\n\n  return (\n    <div style={{ display: 'flex', minHeight: '100vh', background: palette.background, fontFamily }}>\n      <Sidebar />\n      <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n        <Header />\n        <main style={{ flex: 1, padding: '32px', background: palette.card }}>\n          {activeTab === 'programs' && (\n            <>\n              {/* <div className=\"d-flex align-items-center justify-content-between mb-5\">\n                <h4 className=\"mb-0\" style={{ fontWeight: 800, color: palette.text, letterSpacing: 1, textShadow: '0 1px 4px #e6fff2' }}>Training Track</h4>\n                <Button variant=\"success\" className=\"px-4 py-2\" style={{ fontWeight: 700, borderRadius: 32, boxShadow: '0 2px 12px rgba(40,167,69,0.10)', fontFamily, fontSize: '1.1rem', transition: 'all 0.2s', border: 'none' }} onClick={() => setShowModal(true)}>\n                  <i className=\"bi bi-plus-circle me-2\"></i> New Program\n                </Button>\n              </div> */}\n              <ProgramTable\n                programs={programs}\n                tableLoading={tableLoading}\n                tableError={tableError}\n                openProgramDetailsId={openProgramDetailsId}\n                handleProgramTitleClick={handleProgramTitleClick}\n                openEditModal={openEditModal}\n                openScheduleModalForProgram={openScheduleModalForProgram}\n                handleCopyProgram={handleCopyProgram}\n                handleDeleteProgram={handleDeleteProgram}\n                inlineDetailsLoading={inlineDetailsLoading}\n                inlineDetailsError={inlineDetailsError}\n                inlineDetailsWeeks={inlineDetailsWeeks}\n                badgeInfo={badgeInfo}\n                badgeSecondary={badgeSecondary}\n                actionBtn={actionBtn}\n                palette={palette}\n                cardStyle={cardStyle}\n                setShowModal={setShowModal}\n              />\n              <ProgramModal\n                show={showModal}\n                onHide={resetForm}\n                current={current}\n                setCurrent={setCurrent}\n                submitting={submitting}\n                startBuilding={startBuilding}\n                resetForm={resetForm}\n                palette={palette}\n                gradientHeader={gradientHeader}\n                weeks={weeks}\n                moduleDrafts={moduleDrafts}\n                updateModuleDraft={updateModuleDraft}\n                addModule={addModule}\n                addWeek={addWeek}\n                nextWeekNumber={nextWeekNumber}\n                ackMessage={ackMessage}\n              />\n              <DetailsModal\n                show={showDetailsModal}\n                onHide={() => setShowDetailsModal(false)}\n                detailsProgram={detailsProgram}\n                detailsLoading={detailsLoading}\n                detailsError={detailsError}\n                weeks={weeks}\n                palette={palette}\n                cardStyle={cardStyle}\n              />\n              <EditProgramModal\n                show={showEditModal && current.id}\n                current={current}\n                weeks={weeks}\n                moduleDrafts={moduleDrafts}\n                updateModuleDraft={updateModuleDraft}\n                addModule={addModule}\n                addWeek={addWeek}\n                submitting={submitting}\n                nextWeekNumber={nextWeekNumber}\n                resetForm={resetForm}\n                ackMessage={ackMessage}\n                palette={palette}\n                fontFamily={fontFamily}\n              />\n              <SchedulesModal\n                show={showScheduleModal}\n                onHide={() => setShowScheduleModal(false)}\n                scheduleForm={scheduleForm}\n                handleScheduleFormChange={handleScheduleFormChange}\n                programOptions={programOptions}\n                selectedProgramWeeks={selectedProgramWeeks}\n                addLocalSchedule={addLocalSchedule}\n                submitAllSchedules={submitAllSchedules}\n                multiSchedules={multiSchedules}\n                removeLocalSchedule={removeLocalSchedule}\n                scheduleError={scheduleError}\n              />\n            </>\n          )}\n          {activeTab === 'schedules' && (\n            <>\n              {/* <div className=\"d-flex align-items-center justify-content-between mb-5\">\n                <h4 className=\"mb-0\" style={{ fontWeight: 800, color: palette.text, letterSpacing: 1, textShadow: '0 1px 4px #e6fff2' }}>Schedules</h4>\n              </div> */}\n              <SchedulesTable\n                filteredGroupedSchedules={filteredGroupedSchedules}\n                allProgramWeeks={allProgramWeeks}\n                searchEmployee={searchEmployee}\n                setSearchEmployee={setSearchEmployee}\n                scheduleLoading={scheduleLoading}\n                allProgramWeeksLoading={allProgramWeeksLoading}\n                scheduleError={scheduleError}\n                openScheduleDetailsId={openScheduleDetailsId}\n                handleScheduleTitleClick={handleScheduleTitleClick}\n                inlineScheduleList={inlineScheduleList}\n                inlineScheduleLoading={inlineScheduleLoading}\n                getScheduleProgress={getScheduleProgress}\n                handleDeleteScheduleInline={handleDeleteScheduleInline}\n                showProgramScheduleModal={showProgramScheduleModal}\n                setShowProgramScheduleModal={setShowProgramScheduleModal}\n                selectedProgramForSchedules={selectedProgramForSchedules}\n                selectedProgramSchedules={selectedProgramSchedules}\n                handleDeleteScheduleFromModal={handleDeleteScheduleFromModal}\n                gradientHeader={gradientHeader}\n              />\n            </>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}